function [Pc2D, Nc2D, Nc3D, SDMCPc, SDMCInfo] = PcMultiStep_FromCDM(cdmFilename,HBR_m,numSDMCTrials,numWorkers)
% PcMultiStep_FromCDM - This function calculates the 2D-Pc, 2D-Nc, 3D-Nc,
%                       and SDMC-Pc values (as computed by PcMultiStep and
%                       PcMultiStepWithSDMC) from the data obtained within
%                       a CDM file.
%
% Syntax: Pc2D = PcMultiStep_FromCDM(cdmFilename);
%         Pc2D = PcMultiStep_FromCDM(cdmFilename,HBR_m);
%         Pc2D = PcMultiStep_FromCDM(cdmFilename,HBR_m,numSDMCTrials);
%         Pc2D = PcMultiStep_FromCDM(cdmFilename,HBR_m,numSDMCTrials,numWorkers);
%         [Pc2D, Nc2D] = PcMultiStep_FromCDM(___);
%         [Pc2D, Nc2D, Nc3D] = PcMultiStep_FromCDM(___);
%         [Pc2D, Nc2D, Nc3D, SDMCPc] = PcMultiStep_FromCDM(___);
%         [Pc2D, Nc2D, Nc3D, SDMCPc, SDMCInfo] = PcMultiStep_FromCDM(___);
%
% =========================================================================
%
% Description:
%
%   This function provides up to four Pc calculations for a CDM file passed
%   in:
%     Pc2D   = The Pc-2D value as provided by PcCircle.m
%     Nc2D   = The Nc-2D value as provided by Pc2D_Hall.m
%     Nc3D   = The Nc-3D value as provided by Pc3D_Hall.m
%     SDMCPc = The simple dynamics Monte Carlo (SDMC) Pc value as provided
%              by Pc_SDMC.m
%
%   These values are all provided by the PcMultiStep wrapper functions,
%   which are the recommended methods of calculating Pc. Note that
%   PcMultiStep provides several wrapping capabilities (such as adjusting
%   conjunctions to actual TCA states, adjusting for cross-covariance
%   corrections, and dealing with retrograde orbits) which make it the
%   recommended entry point for Pc calculations.
%
%   Due to the increased run times associated with calculating the more
%   complicated Pc methods, each subsequent method in the output list will
%   only be forced to be calculated if the user designates the output as
%   needed when calling this function. Therefore, a call with a single
%   output (Pc2D) will generally run faster than a call with two outputs
%   (Pc2D and Nc2D) and likewise all the way up to the SDMCPc output.
%
%   Important Note: The SDMC Pc algorithm uses Matlab's "Parallel Computing
%                   Toolbox". SDMC will automatically detect if a user does
%                   not have this toolbox and will run the Monte Carlo
%                   trials sequentially when this situation is detected.
%                   The 'numWorkers' option is not available without the
%                   parallel computing toolbox.
%
% =========================================================================
%
% Copyright (c) 2025 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
%
% =========================================================================
%
% Input:
%
%    cdmFilename - Name of the CDM file
%
%    HBR_m       - (Optional) Combined Hard Body Radius (in m) for the
%                  conjunction, overrides the HBR found in the CDM file. If
%                  an HBR is not included in the CDM file, then this value
%                  is required.
%
%    numSDMCTrials - (Optional) The number of trials to use in the SDMC
%                    calculation. If the value is empty, then SDMC will
%                    automatically calculate the number of trials needed to
%                    get 10% accuracy for the 5-95th percentile range. SDMC
%                    will then use the lower of: calculated number of
%                    trials or 3.7e7 trials. This option is not used unless
%                    the SDMC Pc is calculated.
%                    Defaults to []
%
%    numWorkers - (Optional) The number of workers to use in the parallel
%                 SDMC calculations. This option is mainly used (in
%                 conjunction with numSDMCTrials) to replicate SDMC results
%                 generated by CARA. Note that if the number of cores on
%                 the local machine is less than numWorkers, the extra
%                 workers will be serialized and processed as cores are
%                 available (i.e. this will not run SDMC any faster). If
%                 this value is empty, then SDMC will use the number of
%                 workers available in the parallel pool. This option is
%                 not used unless the SDMC Pc is calculated.
%                 Defaults to []
%
% =========================================================================
%
% Output:
%
%    Pc2D - The 2D-Pc of the conjunction defined in the CDM file, as
%           computed by PcCircle.m.
%
%    Nc2D - The 2D-Nc of the conjunction defined in the CDM file, as
%           computed by Pc2D_Hall.m. This value is guaranteed to be
%           computed if at least two output parameters are provided.
%
%    Nc3D - The 3D-Nc of the conjunction defined in the CDM file, as
%           computed by Pc3D_Hall.m. This value is guaranteed to be
%           computed if at least three output parameters are provided.
%
%    SDMCPc - The SDMC Pc of the conjunction defined in the CDM file, as
%             computed by Pc_SDMC.m. This value is only computed if at
%             least four output parameters are provided.
%
%    SDMCInfo - An output structure containing extra information about the
%               SDMC run. See the definition of the 'out' structure within
%               Pc_SDMC.m. This value is only computed if at least four
%               output parameters are provided.
%
% =========================================================================
%
% Initial version: Sep 2025;  Latest update: Sep 2025
%
% ----------------- BEGIN CODE -----------------

    % Check input params
    if nargin == 1
        HBR_m = nan;
        numSDMCTrials = [];
        numWorkers = [];
    elseif nargin == 2
        numSDMCTrials = [];
        numWorkers = [];
    elseif nargin == 3
        numWorkers = [];
    elseif nargin ~= 4
        error('Incorrect number of parameters passed in!');
    end
    if isempty(HBR_m)
        HBR_m = nan;
    end

    % Check which outputs need to be computed based on output params
    runNc2D = false;
    runNc3D = false;
    runSDMC = false;
    if nargout >= 2
        runNc2D = true;
    end
    if nargout >= 3
        runNc3D = true;
    end
    if nargout >= 4
        runSDMC = true;
    end

    % Add required library paths
    persistent pathsAdded
    if isempty(pathsAdded)
        [p,~,~] = fileparts(mfilename('fullpath'));
        s = what(fullfile(p,'../../DistributedMatlab/Utils/CDMAnalysis')); addpath(s.path);
        s = what(fullfile(p,'../../DistributedMatlab/ProbabilityOfCollision')); addpath(s.path);
        pathsAdded = true;
    end

    % Get conjunction parameters from the CDM file
    [r1, v1, C1, r2, v2, C2, cdmHBR,params] = ConjDecoder(cdmFilename);
    if isnan(HBR_m)
        if isnan(cdmHBR)
            error('HBR_m parameter is required when no HBR is provided in the CDM file!');
        end
        HBR = cdmHBR;
    else
        HBR = HBR_m;
    end

    % Set the forcing parameters for calculating Pc values based on which
    % outputs have been designated
    if runNc2D
        params.ForcePc2DCalculation = true;
        params.ForceNc2DCalculation = true;
    end
    if runNc3D
        params.ForceNc3DCalculation = true;
    end
    if runSDMC
        params.ForceSDMCCalculation = true;
        params.SDMCParams.num_trials = numSDMCTrials;
        params.SDMCParams.num_workers = numWorkers;
    else
        % We want to prevent any SDMC calculations, unless they are
        % specifically asked for
        params.PreventSDMCCalculation = true;
    end

    % Override the default covariance cross corrections behavior. It is
    % turned on by default if found within a CDM, but is currently turned
    % off in the CARA baseline.
    params.apply_covXcorr_corrections = false;
    
    % Calculate the Pc using the PcMultiStep family of functions
    [~,out] = PcMultiStepWithSDMC(r1,v1,C1,r2,v2,C2,HBR,params);
    Pc2D = out.Pc2D;
    Nc2D = out.Nc2D;
    Nc3D = out.Nc3D;
    if runSDMC
        SDMCPc = out.SDMCPc;
        SDMCInfo = out.SDMCInfo;
    end
end

% ----------------- END OF CODE ------------------
%
% Please record any changes to the software in the change history 
% shown below:
%
%---------------- CHANGE HISTORY ------------------
% Developer      |    Date    |     Description
%--------------------------------------------------
% L. Baars       | 09-04-2025 | Initial Development, copied from
%                               Pc2D_FromCDM.m and adapted for use with
%                               PcMultiStep.
% L. Baars       | 09-17-2025 | Updated to used ConjDecoder to read CDM
%                               file info.

% =========================================================================
%
% Copyright (c) 2025 United States Government as represented by the
% Administrator of the National Aeronautics and Space Administration.
% All Rights Reserved.
%
% =========================================================================
